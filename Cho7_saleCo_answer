SELECT COUNT(*)
FROM INVOICE;




SELECT * 
FROM CUSTOMER;

SELECT COUNT(CUS_CODE)
FROM CUSTOMERWHERE CUS_BALANCE > 250;




SELECT CUS_CODE, INV_NUMBER, 
       INV_DATE, P_DESCRIPT, 
       LINE_UNITS, LINE_PRICE
FROM CUSTOMER
     JOIN INVOICE USING (CUS_CODE)
     JOIN LINE USING (INV_NUMBER)
     JOIN PRODUCT USING (P_CODE)
ORDER BY CUS_CODE, INV_NUMBER, P_DESCRIPT;







SELECT CUS_CODE, INV_NUMBER, P_DESCRIPT,
       LINE_UNITS AS "UNITS BOUGHT",  
       LINE_PRICE AS "UNIT PRICE",
       LINE_UNITS * LINE_PRICE AS "SUBTOTAL"
FROM CUSTOMER
     JOIN INVOICE USING (CUS_CODE)
     JOIN LINE USING (INV_NUMBER)
     JOIN PRODUCT USING (P_CODE)
ORDER BY CUS_CODE, INV_NUMBER, P_DESCRIPT;








SELECT INVOICE.CUS_CODE, CUSTOMER.CUS_BALANCE,
       SUM(LINE.LINE_UNITS * LINE.LINE_PRICE) AS "TOTAL PURCHASES"
FROM CUSTOMER, INVOICE, LINE
WHERE INVOICE.INV_NUMBER = LINE.INV_NUMBER
AND CUSTOMER.CUS_CODE = INVOICE.CUS_CODE
GROUP BY INVOICE.CUS_CODE, CUSTOMER.CUS_BALANCE;












SELECT (SELECT COUNT(*)FROM INVOICE) AS "TOTAL INVOICES",
        SUM(INVOICE_TOTAL) AS "TOTAL SALES",
        MIN(INVOICE_TOTAL) AS "SMALLEST CUSTOMER PURCHASE",
        MAX(INVOICE_TOTAL) AS "LARGEST SUCTOMER PURCHASE",
        ROUND(AVG(INVOICE_TOTAL),2) AS "AVERAGE CUSTOMER PURCHASE"
FROM
(
SELECT CUS_CODE,
        SUM(ROUND((LINE_UNITS*LINE_PRICE),2)) AS "INVOICE_TOTAL"
FROM    INVOICE
        JOIN LINE USING (INV_NUMBER)
GROUP BY CUS_CODE
ORDER BY CUS_CODE
) AS TOTALPURCHASESPERCUSTOMER;









SELECT *
FROM CUSTOMER;

SELECT *
FROM INVOICE;

SELECT DISTINCT CUSTOMER.CUS_CODE, CUS_BALANCE
FROM CUSTOMER 
JOIN INVOICE ON CUSTOMER.CUS_CODE = INVOICE.CUS_CODE
ORDER BY CUSTOMER.CUS_CODE;











SELECT ROUND(MIN(CUS_BALANCE),2) AS "MINIMUM BALANCE",
       ROUND(MAX(CUS_BALANCE),2) AS "MAXIMUM BALANCE",
       ROUND(AVG(CUS_BALANCE),2) AS "AVERAGE BALANCE"
FROM CUSTOMER
WHERE CUS_CODE IN (SELECT CUS_CODE FROM INVOICE);












SELECT * FROM CUSTOMER;

SELECT ROUND(SUM(CUS_BALANCE),2) AS "TOTAL BALANCE",
       ROUND(MIN(CUS_BALANCE),2) AS "MINIMUM BALANCE",
       ROUND(MAX(CUS_BALANCE),2) AS "MAXIMUM BALANCE",
       ROUND(AVG(CUS_BALANCE),2) AS "AVERAGE BALANCE"
FROM CUSTOMER;










SELECT CUS_CODE, CUS_BALANCE
FROM CUSTOMER
WHERE CUS_CODE NOT IN 
(
    SELECT DISTINCT CUS_CODE 
    FROM INVOICE
);









SELECT * FROM CUSTOMER;
SELECT * FROM INVOICE;

SELECT ROUND(SUM(CUS_BALANCE),2) AS "TOTAL BALANCE",
       ROUND(MIN(CUS_BALANCE),2) AS "MINIMUM BALANCE",
       ROUND(MAX(CUS_BALANCE),2) AS "MAXIMUM BALANCE",
       ROUND(AVG(CUS_BALANCE),2) AS "AVERAGE BALANCE"
FROM CUSTOMER
WHERE CUS_CODE NOT IN
(
    SELECT DISTINCT CUS_CODE 
    FROM INVOICE
);













